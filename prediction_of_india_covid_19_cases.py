# -*- coding: utf-8 -*-
"""Prediction of India Covid-19 Cases.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1lPAMHOsDlQFZK8UPdeDIrhJUk74htkM4
"""

# Commented out IPython magic to ensure Python compatibility.
import pandas as pd
import numpy as np
import seaborn as sns 
import matplotlib.pyplot as plt
import sklearn as sk
color = sns.color_palette()
# %matplotlib inline

import plotly.offline as py
from plotly import tools
py.init_notebook_mode(connected=True)
import plotly.graph_objs as go
import plotly.express as px
import os
os.getcwd()

df = pd.read_csv("state_wise_daily.csv")
print("Dataset have been successfully imported.")

df.head()

df.tail()

df.describe

df.info()

df.shape

statelist=list(df)
del statelist[:4]
statelist
df['Country Total']=df[statelist].sum(axis=1)

#Converting to date time
df['Date']=pd.to_datetime(df['Date'],infer_datetime_format=True)

df_Confirmed=df.dropna()
df_Confirmed.drop([x for x in statelist], axis=1, inplace=True)
df_Confirmed.drop(['TT','Date_YMD'], axis=1, inplace=True)

df_Converted = pd.pivot_table(df_Confirmed, values='Country Total', index=['Date'],columns=['Status'])
df_Converted=df_Converted.reset_index()

df_Converted.head()

print (df_Converted.head())

# Creating graphical representation of daily count of covid cases in India
for Cols in df_Converted.columns:
    if Cols!='Date':
        fig = px.bar(df_Converted, x="Date", y=Cols)
        layout = go.Layout(
            title=go.layout.Title(
            text="Daily count of COVID-19 "+ Cols + " cases in India",
            x=0.5
            ),
            font=dict(size=14),
            width=1040,
            height=600,
            xaxis_title = "Date of observation",
            yaxis_title = "Number of "+ Cols + " cases"
            )
        fig.update_layout(layout)
fig.show()

India=df_Converted

# Creating graphical representation of daily count of covid cases in India
for Cols in India.columns:
    if Cols!='Date':
        fig = px.bar(India, x="Date", y=Cols)
        layout = go.Layout(
            title=go.layout.Title(
            text="Daily count of COVID-19 "+ Cols + " cases in India",
            x=0.5
            ),
            font=dict(size=14),
            width=1040,
            height=600,
            xaxis_title = "Date of observation",
            yaxis_title = "Number of "+ Cols + " cases"
            )
        fig.update_layout(layout)
        fig.show()

CFR = (India["Deceased"] / India["Confirmed"])*100
India["CFR"] = CFR
India.head()

# Creating graphical representation of daily count of of Confirmation covid cases vs CFR in India
for Cols in India.columns:
    if Cols!='Date':
        if Cols!='Confirmed':
            fig = px.bar(India, x="Date", y=Cols)
            layout = go.Layout(
                title=go.layout.Title(
                text="Daily count of COVID-19 "+ Cols + " cases in India",
                x=0.5
                ),
                font=dict(size=14),
                width=1040,
                height=600,
                xaxis_title = "Date of observation",
                yaxis_title = "Number of "+ Cols + " cases"
                )
            fig.update_layout(layout)
            fig.show()

print('The average CFR of India is ',India.CFR.mean())

